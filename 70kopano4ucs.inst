#!/bin/sh
#
# kopano4ucs
#  join script
#
# Copyright 2012-2019 Univention GmbH
# Copyright 2016 Kopano bv
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION=7

. /usr/share/univention-join/joinscripthelper.lib
. /usr/share/univention-lib/all.sh
. /usr/share/univention-lib/kopano4ucs.sh

joinscript_init

eval "$(univention-config-registry shell)"

# copy certificate
mkdir -p /etc/kopano/ssl
cp "/etc/univention/ssl/$hostname.$domainname/cert.pem" /etc/kopano/ssl/
cp "/etc/univention/ssl/$hostname.$domainname/private.key" /etc/kopano/ssl/
cat /etc/kopano/ssl/cert.pem /etc/kopano/ssl/private.key > /etc/kopano/ssl/server.pem
chmod 600 /etc/kopano/ssl/private.key
chmod 600 /etc/kopano/ssl/server.pem
chown kopano:kopano /etc/kopano/ssl/
chown kopano:kopano /etc/kopano/ssl/cert.pem
chown kopano:kopano /etc/kopano/ssl/private.key
chown kopano:kopano /etc/kopano/ssl/server.pem

# add service to my host object
ucs_addServiceToLocalhost "SMTP" "$@"
ucs_addServiceToLocalhost "IMAP" "$@"
ucs_addServiceToLocalhost "Kopano" "$@"

if joinscript_check_version_in_range_executed 1 5; then
	# migrate and remove old variants of mrdecline..
	for u in $(udm users/user list "$@" | grep "DN:" | awk '{ print $2 }'); do
		uid=$(echo "$u" | cut '-d,' -f1 | cut -b5-)
		echo "checking user $uid"
		ConflictingTimes=$(udm users/user list "$@" --position "$u" | grep MRDeclineConflictingTimes | tr -d '[:space:]' | cut -d':' -f 2)
		RecurringItems=$(udm users/user list "$@" --position "$u" | grep MRDeclineRecurringItems | tr -d '[:space:]' | cut -d':' -f 2)

		# Having MRDeclineConflictingTimes set to 1 means that it should not accept conflicting meetings
		if [ "$ConflictingTimes" = "1" ]; then
			echo "disabling acceptance of conflicting meetings"
			udm users/user modify "$@" --dn "$u" \
			--set MRAcceptConflictingTimes="0"
		fi

		# Having MRDeclineRecurringItems set to 1 mean that it should not accept recurring meetings
		if [ "$RecurringItems" = "1" ]; then
			echo "disabling acceptance of recurring meetings"
			echo setting non default
			udm users/user modify "$@" --dn "$u" \
			--set MRAcceptRecurringItems="0"
		fi
	done
	univention-directory-manager settings/extended_attribute remove "$@" \
	--dn "cn=MRDeclineConflictingTimes,cn=kopano,cn=custom attributes,cn=univention,$ldap_base"
	univention-directory-manager settings/extended_attribute remove "$@" \
	--dn "cn=MRDeclineRecurringItems,cn=kopano,cn=custom attributes,cn=univention,$ldap_base"
fi


# call server password change script
/usr/lib/univention-server/server_password_change.d/50univention-mail-server prechange
/usr/lib/univention-server/server_password_change.d/50univention-mail-server postchange
/usr/lib/univention-server/server_password_change.d/70kopano postchange

# kopano-server was just restarted in server_password_change.d/70kopano postchange (Bug #31709, #34011)
wait_for_kopano_server_startup

# make sure kopano services are enabled in systemd
for component in kopano-server kopano-dagent kopano-gateway kopano-ical kopano-monitor kopano-search kopano-spooler; do
	systemctl enable "$component"
	systemctl start "$component"
done

# give kopano server some time to settle
sleep 3
# create public store if missing
kopano-storeadm -h default: -P

joinscript_save_current_version

exit 0
